/* Generated By:JavaCC: Do not edit this line. GramaticaConstants.java */
package CCompiler;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface GramaticaConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int INT = 6;
  /** RegularExpression Id. */
  int IF = 7;
  /** RegularExpression Id. */
  int FLOAT = 8;
  /** RegularExpression Id. */
  int ELSE = 9;
  /** RegularExpression Id. */
  int RETURN = 10;
  /** RegularExpression Id. */
  int MAIN = 11;
  /** RegularExpression Id. */
  int WHILE = 12;
  /** RegularExpression Id. */
  int VOID = 13;
  /** RegularExpression Id. */
  int CHAR = 14;
  /** RegularExpression Id. */
  int FOR = 15;
  /** RegularExpression Id. */
  int DOUBLE = 16;
  /** RegularExpression Id. */
  int ASSIGN = 17;
  /** RegularExpression Id. */
  int GT = 18;
  /** RegularExpression Id. */
  int LT = 19;
  /** RegularExpression Id. */
  int EQ = 20;
  /** RegularExpression Id. */
  int LE = 21;
  /** RegularExpression Id. */
  int GE = 22;
  /** RegularExpression Id. */
  int NE = 23;
  /** RegularExpression Id. */
  int PLUS = 24;
  /** RegularExpression Id. */
  int MINUS = 25;
  /** RegularExpression Id. */
  int MULTIPLY = 26;
  /** RegularExpression Id. */
  int DIVIDE = 27;
  /** RegularExpression Id. */
  int ADRESS = 28;
  /** RegularExpression Id. */
  int AND = 29;
  /** RegularExpression Id. */
  int OR = 30;
  /** RegularExpression Id. */
  int LPAREN = 31;
  /** RegularExpression Id. */
  int RPAREN = 32;
  /** RegularExpression Id. */
  int LBRACE = 33;
  /** RegularExpression Id. */
  int RBRACE = 34;
  /** RegularExpression Id. */
  int LBRACKET = 35;
  /** RegularExpression Id. */
  int RBRACKET = 36;
  /** RegularExpression Id. */
  int SEMICOLON = 37;
  /** RegularExpression Id. */
  int COMMA = 38;
  /** RegularExpression Id. */
  int DOT = 39;
  /** RegularExpression Id. */
  int HASHTAG = 40;
  /** RegularExpression Id. */
  int int_constant = 41;
  /** RegularExpression Id. */
  int float_constant = 42;
  /** RegularExpression Id. */
  int null_constant = 43;
  /** RegularExpression Id. */
  int string_constant = 44;
  /** RegularExpression Id. */
  int IDENT = 45;
  /** RegularExpression Id. */
  int LETTER = 46;
  /** RegularExpression Id. */
  int DIGIT = 47;
  /** RegularExpression Id. */
  int INVALID_LEXICAL = 54;
  /** RegularExpression Id. */
  int INVALID_CONST = 55;
  /** RegularExpression Id. */
  int INVALID_IDCONST = 56;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int multicomentario = 1;
  /** Lexical state. */
  int unicomentario = 2;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\f\"",
    "\"int\"",
    "\"if\"",
    "\"float\"",
    "\"else\"",
    "\"return\"",
    "\"main\"",
    "\"while\"",
    "\"void\"",
    "\"char\"",
    "\"for\"",
    "\"double\"",
    "\"=\"",
    "\">\"",
    "\"<\"",
    "\"==\"",
    "\"<=\"",
    "\">=\"",
    "\"!=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"&\"",
    "\"&&\"",
    "\"||\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\";\"",
    "\",\"",
    "\".\"",
    "\"#\"",
    "<int_constant>",
    "<float_constant>",
    "\"NULL\"",
    "<string_constant>",
    "<IDENT>",
    "<LETTER>",
    "<DIGIT>",
    "\"/*\"",
    "\"*/\"",
    "<token of kind 50>",
    "\"//\"",
    "<token of kind 52>",
    "<token of kind 53>",
    "<INVALID_LEXICAL>",
    "<INVALID_CONST>",
    "<INVALID_IDCONST>",
  };

}
